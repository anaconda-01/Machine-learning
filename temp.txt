from sklearn import datasets
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.cluster import KMeans
# loading data
iris = datasets.load_iris()
X = iris.data[:, :2]
y = iris.target

plt.scatter(X[:,0], X[:,1], c=y, cmap='gist_rainbow')
plt.xlabel('Sepa1 Length')
plt.ylabel('Sepal Width')

# creating Kmeans object using  KMeans()
kmean = KMeans(n_clusters = 3, random_state=1)
# Fit on data
kmean.fit(X)
KMeans(algorithm='auto', 
       copy_x=True, 
       init='k-means++', # selects initial cluster centers
       max_iter=300,
       n_clusters=3, 
       n_init=10, 
       n_jobs=None, 
       precompute_distances='auto',
       random_state=1, 
       tol=0.0001, # min. tolerance for distance between clusters
       verbose=0)
# instantiate a variable for the centers
centers = kmean.cluster_centers_
# print the cluster centers
print(centers)
new_labels = kmean.labels_
# Plot the identified clusters and compare
fig, axes = plt.subplots(1, 2, figsize=(12,7))
axes[0].scatter(X[:, 0], X[:, 1], c=y, cmap='gist_rainbow', edgecolor='k', s=150)
axes[1].scatter(X[:, 0], X[:, 1], c=new_labels, cmap='jet', edgecolor='k', s=150)
axes[0].set_xlabel('Sepal length')
axes[0].set_ylabel('Sepal width')
axes[1].set_xlabel('Sepal length')
axes[1].set_ylabel('Sepal width')
axes[0].set_title('Original')
axes[1].set_title('Predicted')